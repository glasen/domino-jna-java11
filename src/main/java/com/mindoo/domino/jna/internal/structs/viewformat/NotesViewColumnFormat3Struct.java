package com.mindoo.domino.jna.internal.structs.viewformat;
import java.security.AccessController;
import java.security.PrivilegedAction;
import java.util.Arrays;
import java.util.List;

import com.mindoo.domino.jna.internal.structs.BaseStructure;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class NotesViewColumnFormat3Struct extends BaseStructure {
	/** VIEW_COLUMN_FORMAT_SIGNATURE3 */
	public short Signature;
	/** NPREF_xxx */
	public byte DTPref;
	/** DT_xxx */
	public int DTFlags;
	/** DT_xxx */
	public int DTFlags2;
	/** DT_WFMT_xxx */
	public byte DTDOWFmt;
	/** DT_YFMT_xxx */
	public byte DTYearFmt;
	/** DT_MFMT_xxx */
	public byte DTMonthFmt;
	/** DT_DFMT_xxx */
	public byte DTDayFmt;
	public byte DTDsep1Len;
	public byte DTDsep2Len;
	public byte DTDsep3Len;
	public byte DTTsepLen;
	/** DT_DSHOW_xxx */
	public byte DTDShow;
	/** DT_DSPEC_xxx */
	public byte DTDSpecial;
	/** DT_TSHOW_xxx */
	public byte DTTShow;
	/** TZFMT_xxx */
	public byte DTTZone;
	public short DatePreference;
	public byte bUnused;
	
	public int Unused;
	public NotesViewColumnFormat3Struct() {
		super();
		setAlignType(Structure.ALIGN_NONE);
	}
	
	public static NotesViewColumnFormat3Struct newInstance() {
		return AccessController.doPrivileged(new PrivilegedAction<NotesViewColumnFormat3Struct>() {

			@Override
			public NotesViewColumnFormat3Struct run() {
				return new NotesViewColumnFormat3Struct();
			}
		});
	}

	protected List<String> getFieldOrder() {
		return Arrays.asList("Signature", "DTPref", "DTFlags", "DTFlags2", "DTDOWFmt", "DTYearFmt", "DTMonthFmt", "DTDayFmt", "DTDsep1Len", "DTDsep2Len", "DTDsep3Len", "DTTsepLen", "DTDShow", "DTDSpecial", "DTTShow", "DTTZone", "DatePreference", "bUnused", "Unused");
	}
	public NotesViewColumnFormat3Struct(Pointer peer) {
		super(peer);
		setAlignType(Structure.ALIGN_NONE);
	}
	
	public static NotesViewColumnFormat3Struct newInstance(final Pointer peer) {
		return AccessController.doPrivileged(new PrivilegedAction<NotesViewColumnFormat3Struct>() {

			@Override
			public NotesViewColumnFormat3Struct run() {
				return new NotesViewColumnFormat3Struct(peer);
			}
		});
	}

	public static class ByReference extends NotesViewColumnFormat3Struct implements Structure.ByReference {
		
	};
	public static class ByValue extends NotesViewColumnFormat3Struct implements Structure.ByValue {
		
	};
}
