package com.mindoo.domino.jna.internal.structs.html;

import java.security.AccessController;
import java.security.PrivilegedAction;
import java.util.Arrays;
import java.util.List;

import com.mindoo.domino.jna.internal.structs.BaseStructure;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;

/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class HtmlApi_UrlTargetComponentStruct extends BaseStructure {
	/**
	 * the kind of note object the component refers to<br>
	 * C type : UAT
	 */
	public int AddressableType;
	
	/**
	 * the value type of the component -- determines<br>
	 * the branch of the following union to use<br>
	 * C type : URT
	 */
	public int ReferenceType;
	
	/** C type : Value_union */
	public ValueUnion Value;
	
	public HtmlApi_UrlTargetComponentStruct() {
		super();
	}

	public static HtmlApi_UrlTargetComponentStruct newInstance() {
		return AccessController.doPrivileged(new PrivilegedAction<HtmlApi_UrlTargetComponentStruct>() {

			@Override
			public HtmlApi_UrlTargetComponentStruct run() {
				return new HtmlApi_UrlTargetComponentStruct();
			}
		});
	}

	protected List<String> getFieldOrder() {
		return Arrays.asList("AddressableType", "ReferenceType", "Value");
	}
	
	/**
	 * @param AddressableType  the kind of note object the component refers to, C type : UAT<br>
	 * @param ReferenceType the value type of the component -- determines the branch of the following union to use, C type : URT
	 * @param Value C type : Value_union
	 */
	public HtmlApi_UrlTargetComponentStruct(int AddressableType, int ReferenceType, ValueUnion Value) {
		super();
		this.AddressableType = AddressableType;
		this.ReferenceType = ReferenceType;
		this.Value = Value;
	}
	
	public static HtmlApi_UrlTargetComponentStruct newInstance(final int AddressableType, final int ReferenceType, final ValueUnion Value) {
		return AccessController.doPrivileged(new PrivilegedAction<HtmlApi_UrlTargetComponentStruct>() {

			@Override
			public HtmlApi_UrlTargetComponentStruct run() {
				return new HtmlApi_UrlTargetComponentStruct(AddressableType, ReferenceType, Value);
			}
		});
	}

	
	public HtmlApi_UrlTargetComponentStruct(Pointer peer) {
		super(peer);
	}
	
	public static HtmlApi_UrlTargetComponentStruct newInstance(final Pointer peer) {
		return AccessController.doPrivileged(new PrivilegedAction<HtmlApi_UrlTargetComponentStruct>() {

			@Override
			public HtmlApi_UrlTargetComponentStruct run() {
				return new HtmlApi_UrlTargetComponentStruct(peer);
			}
		});
	}

	public static class ByReference extends HtmlApi_UrlTargetComponentStruct implements Structure.ByReference {

	};
	
	public static class ByValue extends HtmlApi_UrlTargetComponentStruct implements Structure.ByValue {

	};
}
