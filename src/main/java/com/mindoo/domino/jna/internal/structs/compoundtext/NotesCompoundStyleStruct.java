package com.mindoo.domino.jna.internal.structs.compoundtext;
import java.security.AccessController;
import java.security.PrivilegedAction;
import java.util.Arrays;
import java.util.List;

import com.mindoo.domino.jna.internal.structs.BaseStructure;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class NotesCompoundStyleStruct extends BaseStructure {
	/** paragraph justification type */
	public short JustifyMode;
	/** Line spacing */
	public short LineSpacing;
	/** # units above paragraph */
	public short ParagraphSpacingBefore;
	/** # units below paragraph */
	public short ParagraphSpacingAfter;
	/** leftmost margin in twips */
	public short LeftMargin;
	/** rightmost margin in twips */
	public short RightMargin;
	/** leftmost margin on first line */
	public short FirstLineLeftMargin;
	/** # tab stops in table */
	public short Tabs;
	/**
	 * table of tab stops<br>
	 * C type : signed short[20]
	 */
	public short[] Tab = new short[20];
	/** paragraph attribute flags */
	public short Flags;
	
	public NotesCompoundStyleStruct() {
		super();
	}
	
	public static NotesCompoundStyleStruct newInstance() {
		return AccessController.doPrivileged(new PrivilegedAction<NotesCompoundStyleStruct>() {

			@Override
			public NotesCompoundStyleStruct run() {
				return new NotesCompoundStyleStruct();
			}
		});
	}

	protected List<String> getFieldOrder() {
		return Arrays.asList("JustifyMode", "LineSpacing", "ParagraphSpacingBefore", "ParagraphSpacingAfter", "LeftMargin", "RightMargin", "FirstLineLeftMargin", "Tabs", "Tab", "Flags");
	}
	
	public NotesCompoundStyleStruct(Pointer peer) {
		super(peer);
	}
	
	public static NotesCompoundStyleStruct newInstance(final Pointer peer) {
		return AccessController.doPrivileged(new PrivilegedAction<NotesCompoundStyleStruct>() {

			@Override
			public NotesCompoundStyleStruct run() {
				return new NotesCompoundStyleStruct(peer);
			}
		});
	}

	public static class ByReference extends NotesCompoundStyleStruct implements Structure.ByReference {
		
	};
	public static class ByValue extends NotesCompoundStyleStruct implements Structure.ByValue {
		
	};
}
