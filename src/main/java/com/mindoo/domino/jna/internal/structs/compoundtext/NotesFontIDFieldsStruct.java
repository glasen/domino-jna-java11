package com.mindoo.domino.jna.internal.structs.compoundtext;
import java.security.AccessController;
import java.security.PrivilegedAction;
import java.util.Arrays;
import java.util.List;

import com.mindoo.domino.jna.internal.structs.BaseStructure;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class NotesFontIDFieldsStruct extends BaseStructure {
	/** Font face (FONT_FACE_xxx) */
	public byte Face;
	/** Attributes (ISBOLD,etc) */
	public byte Attrib;
	/** Color index (NOTES_COLOR_xxx) */
	public byte Color;
	/** Size of font in points */
	public byte PointSize;
	
	public NotesFontIDFieldsStruct() {
		super();
		setAlignType(Structure.ALIGN_NONE);
	}
	
	public static NotesFontIDFieldsStruct newInstance() {
		return AccessController.doPrivileged(new PrivilegedAction<NotesFontIDFieldsStruct>() {

			@Override
			public NotesFontIDFieldsStruct run() {
				return new NotesFontIDFieldsStruct();
			}
		});
	}

	protected List<String> getFieldOrder() {
		return Arrays.asList("Face", "Attrib", "Color", "PointSize");
	}
	/**
	 * @param Face Font face (FONT_FACE_xxx)<br>
	 * @param Attrib Attributes (ISBOLD,etc)<br>
	 * @param Color Color index (NOTES_COLOR_xxx)<br>
	 * @param PointSize Size of font in points
	 */
	public NotesFontIDFieldsStruct(byte Face, byte Attrib, byte Color, byte PointSize) {
		super();
		this.Face = Face;
		this.Attrib = Attrib;
		this.Color = Color;
		this.PointSize = PointSize;
		setAlignType(Structure.ALIGN_NONE);
	}
	
	public static NotesFontIDFieldsStruct newInstance(final byte Face, final byte Attrib, final byte Color, final byte PointSize) {
		return AccessController.doPrivileged(new PrivilegedAction<NotesFontIDFieldsStruct>() {

			@Override
			public NotesFontIDFieldsStruct run() {
				return new NotesFontIDFieldsStruct(Face, Attrib, Color, PointSize);
			}
		});
	}

	public NotesFontIDFieldsStruct(Pointer peer) {
		super(peer);
		setAlignType(Structure.ALIGN_NONE);
	}
	
	public static NotesFontIDFieldsStruct newInstance(final Pointer peer) {
		return AccessController.doPrivileged(new PrivilegedAction<NotesFontIDFieldsStruct>() {

			@Override
			public NotesFontIDFieldsStruct run() {
				return new NotesFontIDFieldsStruct(peer);
			}
		});
	}
	
	public static class ByReference extends NotesFontIDFieldsStruct implements Structure.ByReference {
		
	};
	public static class ByValue extends NotesFontIDFieldsStruct implements Structure.ByValue {
		
	};
}
